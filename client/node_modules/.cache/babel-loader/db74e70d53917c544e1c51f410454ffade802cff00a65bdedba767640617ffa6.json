{"ast":null,"code":"var _jsxFileName = \"/Users/ishanchaturvedi/Downloads/chat-app/client/src/components/ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport './ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5001');\nconst COLORS = ['#e74c3c', '#8e44ad', '#3498db', '#16a085', '#f39c12', '#2ecc71', '#d35400'];\nconst getUserDetails = () => {\n  let username = localStorage.getItem('chat_username');\n  let color = localStorage.getItem('chat_user_color');\n  if (!username) {\n    username = prompt('Enter your name:');\n    localStorage.setItem('chat_username', username);\n  }\n  if (!color) {\n    color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n    localStorage.setItem('chat_user_color', color);\n  }\n  return {\n    username,\n    color\n  };\n};\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [userColors, setUserColors] = useState({});\n  const {\n    username,\n    color\n  } = getUserDetails();\n  useEffect(() => {\n    socket.on('chat message', msg => {\n      setMessages(prev => [...prev, msg]);\n    });\n    return () => {\n      socket.off('chat message');\n    };\n  }, []);\n  const getUserColor = username => {\n    if (!userColors[username]) {\n      const newColor = COLORS[Object.keys(userColors).length % COLORS.length];\n      setUserColors(prev => ({\n        ...prev,\n        [username]: newColor\n      }));\n      return newColor;\n    }\n    return userColors[username];\n  };\n  const sendMessage = () => {\n    if (input.trim()) {\n      socket.emit('chat message', {\n        username,\n        color,\n        text: input\n      });\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"6px 10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: getUserColor(msg.username)\n          },\n          children: [\"[\", msg.username, \"]:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"iqpbXAxLPNJjsu4cATrnRvou8y4=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","COLORS","getUserDetails","username","localStorage","getItem","color","prompt","setItem","Math","floor","random","toString","ChatRoom","_s","messages","setMessages","input","setInput","userColors","setUserColors","on","msg","prev","off","getUserColor","newColor","Object","keys","length","sendMessage","trim","emit","text","className","children","map","index","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ishanchaturvedi/Downloads/chat-app/client/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport './ChatRoom.css';\n\nconst socket = io('http://localhost:5001');\n\nconst COLORS = ['#e74c3c', '#8e44ad', '#3498db', '#16a085', '#f39c12', '#2ecc71', '#d35400'];\n\nconst getUserDetails = () => {\n  let username = localStorage.getItem('chat_username');\n  let color = localStorage.getItem('chat_user_color');\n\n  if (!username) {\n    username = prompt('Enter your name:');\n    localStorage.setItem('chat_username', username);\n  }\n\n  if (!color) {\n    color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n    localStorage.setItem('chat_user_color', color);\n  }\n\n  return { username, color };\n};\n\nconst ChatRoom = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [userColors, setUserColors] = useState({});\n  const { username, color } = getUserDetails();\n\n  useEffect(() => {\n    socket.on('chat message', (msg) => {\n      setMessages((prev) => [...prev, msg]);\n    });\n\n    return () => {\n      socket.off('chat message');\n    };\n  }, []);\n\n  const getUserColor = (username) => {\n    if (!userColors[username]) {\n      const newColor = COLORS[Object.keys(userColors).length % COLORS.length];\n      setUserColors(prev => ({ ...prev, [username]: newColor }));\n      return newColor;\n    }\n    return userColors[username];\n  };\n\n  const sendMessage = () => {\n    if (input.trim()) {\n      socket.emit('chat message', {\n        username,\n        color,\n        text: input\n      });\n      setInput('');\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-box\">\n        {messages.map((msg, index) => (\n          <div key={index} style={{ padding: \"6px 10px\" }}>\n            <strong style={{ color: getUserColor(msg.username) }}>\n              [{msg.username}]:\n            </strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-box\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}